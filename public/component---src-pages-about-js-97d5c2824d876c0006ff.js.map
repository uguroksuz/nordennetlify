{"version":3,"sources":["webpack:///./src/components/people-grid.js","webpack:///./src/pages/about.js","webpack:///./src/components/block-content/figure.js","webpack:///./src/components/block-content/slideshow.js","webpack:///./src/components/block-content/index.js"],"names":["ProfileCard","image","name","_rawBio","className","styles","profileCard","profileMediaThumb","asset","src","imageUrlFor","buildImageObj","width","height","fit","url","headline","bio","blocks","PeopleGrid","items","title","root","responsiveTitle2","grid","map","item","key","id","query","AboutPage","props","data","errors","page","personNodes","people","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","Error","_rawBody","length","Figure","alt","caption","Slideshow","slides","len","useState","index","setIndex","nav","onClick","Math","max","disabled","min","carousel","data-index","style","transform","slide","_key","floor","serializers","types","block","node","typography","responsiveTitle1","children","responsiveTitle3","responsiveTitle4","blockQuote","figure","slideshow","BlockContent"],"mappings":"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","file":"component---src-pages-about-js-97d5c2824d876c0006ff.js","sourcesContent":["import React from 'react'\r\nimport BlockText from './block-text'\r\nimport { buildImageObj } from '../lib/helpers'\r\nimport { imageUrlFor } from '../lib/image-url'\r\n\r\nimport styles from './people-grid.module.css'\r\nimport { responsiveTitle2 } from '../components/typography.module.css'\r\n\r\nfunction ProfileCard ({ image, name, _rawBio }) {\r\n  return (\r\n    <div className={styles.profileCard}>\r\n      <div className={styles.profileMediaThumb}>\r\n        {image && image.asset && (\r\n          <img\r\n            src={imageUrlFor(buildImageObj(image))\r\n              .width(600)\r\n              .height(600)\r\n              .fit('crop')\r\n              .url()}\r\n          />\r\n        )}\r\n      </div>\r\n      <h2 className={styles.headline}>{name}</h2>\r\n      {_rawBio && (\r\n        <div className={styles.bio}>\r\n          <BlockText blocks={_rawBio} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction PeopleGrid ({ items, title }) {\r\n  return (\r\n    <div className={styles.root}>\r\n      {<h2 className={responsiveTitle2}>{title}</h2>}\r\n      <ul className={styles.grid}>\r\n        {items.map(item => (\r\n          <li key={item.id}>\r\n            <ProfileCard {...item} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PeopleGrid\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport BlockContent from '../components/block-content'\r\n// import Container from '../components/container'\r\nimport GraphQLErrorList from '../components/graphql-error-list'\r\nimport PeopleGrid from '../components/people-grid'\r\nimport SEO from '../components/seo'\r\nimport Layout from '../containers/layout'\r\nimport { mapEdgesToNodes, filterOutDocsWithoutSlugs } from '../lib/helpers'\r\n\r\nexport const query = graphql`\r\n  query AboutPageQuery {\r\n    page: sanityPage(_id: { regex: \"/(drafts.|)about/\" }) {\r\n      id\r\n      title\r\n      _rawBody\r\n    }\r\n    people: allSanityPerson {\r\n      edges {\r\n        node {\r\n          id\r\n          image {\r\n            asset {\r\n              _id\r\n            }\r\n          }\r\n          name\r\n          _rawBio\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AboutPage = props => {\r\n  const { data, errors } = props\r\n\r\n  if (errors) {\r\n    return (\r\n      <Layout>\r\n        <GraphQLErrorList errors={errors} />\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  const page = data && data.page\r\n  const personNodes =\r\n    data && data.people && mapEdgesToNodes(data.people).filter(filterOutDocsWithoutSlugs)\r\n\r\n  if (!page) {\r\n    throw new Error(\r\n      'Missing \"About\" page data. Open the studio at http://localhost:3333 and add \"About\" page data and restart the development server.'\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={page.title} />\r\n      <div className=\"py-5\">\r\n        <div className=\"container py-5\">\r\n          <h1 className=\"text-center mb-5 font-weight-bold\">Om os</h1>\r\n          <BlockContent blocks={page._rawBody || []} />\r\n          {personNodes && personNodes.length > 0 && <PeopleGrid items={personNodes} title='People' />}\r\n\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n","import React from 'react'\r\nimport { buildImageObj } from '../../lib/helpers'\r\nimport { imageUrlFor } from '../../lib/image-url'\r\n\r\nimport styles from './figure.module.css'\r\n\r\nfunction Figure (props) {\r\n  return (\r\n    <figure className={styles.root}>\r\n      {props.asset && (\r\n        <img\r\n          src={imageUrlFor(buildImageObj(props))\r\n            .width(1200)\r\n            .url()}\r\n          alt={props.alt}\r\n        />\r\n      )}\r\n      <figcaption className={styles.caption}>{props.caption}</figcaption>\r\n    </figure>\r\n  )\r\n}\r\n\r\nexport default Figure\r\n","import React, { useState } from 'react'\r\nimport { buildImageObj } from '../../lib/helpers'\r\nimport { imageUrlFor } from '../../lib/image-url'\r\n\r\nimport styles from './slideshow.module.css'\r\n\r\nfunction Slideshow (props) {\r\n  if (!props.slides) return null\r\n  const len = props.slides.length\r\n  const [index, setIndex] = useState(0)\r\n  function handlePrev () {\r\n    setIndex(Math.max(index - 1, 0))\r\n  }\r\n  function handleNext () {\r\n    setIndex(Math.min(index + 1, len - 1))\r\n  }\r\n  return (\r\n    <div className={styles.root}>\r\n      <div className={styles.nav}>\r\n        <button onClick={handlePrev} disabled={index === 0}>\r\n          Prev\r\n        </button>\r\n        <span>\r\n          {index + 1} of {len}\r\n        </span>\r\n        <button onClick={handleNext} disabled={index === len - 1}>\r\n          Next\r\n        </button>\r\n      </div>\r\n      <ul\r\n        className={styles.carousel}\r\n        data-index={index}\r\n        style={{ transform: `translate3d(${index * -100}%, 0, 0)` }}\r\n      >\r\n        {props.slides.map(slide => (\r\n          <li key={slide._key} className={styles.slide}>\r\n            {slide.asset && (\r\n              <img\r\n                src={imageUrlFor(buildImageObj(slide))\r\n                  .width(1200)\r\n                  .height(Math.floor((9 / 16) * 1200))\r\n                  .fit('crop')\r\n                  .url()}\r\n              />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Slideshow\r\n","import BaseBlockContent from '@sanity/block-content-to-react'\r\nimport React from 'react'\r\nimport Figure from './figure'\r\nimport Slideshow from './slideshow'\r\n\r\nimport typography from '../typography.module.css'\r\n\r\nconst serializers = {\r\n  types: {\r\n    block (props) {\r\n      switch (props.node.style) {\r\n        case 'h1':\r\n          return <h1 className={typography.responsiveTitle1}>{props.children}</h1>\r\n\r\n        case 'h2':\r\n          return <h2 className={typography.responsiveTitle2}>{props.children}</h2>\r\n\r\n        case 'h3':\r\n          return <h3 className={typography.responsiveTitle3}>{props.children}</h3>\r\n\r\n        case 'h4':\r\n          return <h4 className={typography.responsiveTitle4}>{props.children}</h4>\r\n\r\n        case 'blockquote':\r\n          return <blockquote className={typography.blockQuote}>{props.children}</blockquote>\r\n\r\n        default:\r\n          return <p>{props.children}</p>\r\n      }\r\n    },\r\n    figure (props) {\r\n      return <Figure {...props.node} />\r\n    },\r\n    slideshow (props) {\r\n      return <Slideshow {...props.node} />\r\n    }\r\n  }\r\n}\r\n\r\nconst BlockContent = ({ blocks }) => <BaseBlockContent blocks={blocks} serializers={serializers} />\r\n\r\nexport default BlockContent\r\n"],"sourceRoot":""}