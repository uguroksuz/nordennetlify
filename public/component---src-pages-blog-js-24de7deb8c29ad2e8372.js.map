{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/blog-post-preview.js","webpack:///./src/components/blog-post-preview-grid.js"],"names":["query","BlogPage","props","data","errors","postNodes","posts","mapEdgesToNodes","title","className","responsiveTitle1","length","nodes","BlogPostPreview","styles","root","to","getBlogUrl","publishedAt","slug","current","leadMediaThumb","mainImage","asset","src","imageUrlFor","buildImageObj","width","height","Math","floor","url","alt","cn","responsiveTitle3","_rawExcerpt","excerpt","blocks","BlogPostPreviewGrid","headline","browseMoreHref","grid","map","node","key","id","browseMoreNav","defaultProps"],"mappings":"0FAAA,yIAWaA,EAAK,aAgDHC,UAxBE,SAAAC,GAAU,IACjBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,GAAIA,EACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBA,OAAQA,KAKhC,IAAMC,EAAYF,GAAQA,EAAKG,OAASC,YAAgBJ,EAAKG,OAE7D,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,SACX,kBAAC,IAAD,KACE,wBAAIC,UAAWC,oBAAf,QACCL,GAAaA,EAAUM,OAAS,GAAK,kBAAC,IAAD,CAAqBC,MAAOP,Q,uICpB3DQ,MAxBf,SAA0BX,GACxB,OACE,kBAAC,IAAD,CAAMO,UAAWK,IAAOC,KAAMC,GAAIC,YAAWf,EAAMgB,YAAahB,EAAMiB,KAAKC,UACzE,yBAAKX,UAAWK,IAAOO,gBACpBnB,EAAMoB,WAAapB,EAAMoB,UAAUC,OAClC,yBACEC,IAAKC,YAAYC,YAAcxB,EAAMoB,YAClCK,MAAM,KACNC,OAAOC,KAAKC,MAAO,QACnBC,MACHC,IAAK9B,EAAMoB,UAAUU,OAI3B,wBAAIvB,UAAWwB,YAAGC,mBAAkBpB,IAAON,QAASN,EAAMM,OACzDN,EAAMiC,aACL,yBAAK1B,UAAWK,IAAOsB,SACrB,kBAAC,IAAD,CAAWC,OAAQnC,EAAMiC,iB,kBCpBnC,SAASG,EAAqBpC,GAC5B,OACE,yBAAKO,UAAWK,IAAOC,MACpBb,EAAMM,OACL,wBAAIC,UAAWK,IAAOyB,UACnBrC,EAAMsC,eACL,kBAAC,IAAD,CAAMxB,GAAId,EAAMsC,gBAAiBtC,EAAMM,OAEvCN,EAAMM,OAIZ,wBAAIC,UAAWK,IAAO2B,MACnBvC,EAAMU,OACLV,EAAMU,MAAM8B,KAAI,SAAAC,GAAI,OAClB,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,EAAoBF,QAI5BzC,EAAMsC,gBACL,yBAAK/B,UAAWK,IAAOgC,eACrB,kBAAC,IAAD,CAAM9B,GAAId,EAAMsC,gBAAhB,iBAOVF,EAAoBS,aAAe,CACjCvC,MAAO,GACPI,MAAO,GACP4B,eAAgB,IAGHF","file":"component---src-pages-blog-js-24de7deb8c29ad2e8372.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { mapEdgesToNodes } from '../lib/helpers'\r\nimport BlogPostPreviewGrid from '../components/blog-post-preview-grid'\r\nimport Container from '../components/container'\r\nimport GraphQLErrorList from '../components/graphql-error-list'\r\nimport SEO from '../components/seo'\r\nimport Layout from '../containers/layout'\r\n\r\nimport { responsiveTitle1 } from '../components/typography.module.css'\r\n\r\nexport const query = graphql`\r\n  query BlogPageQuery {\r\n    posts: allSanityPost(limit: 12, sort: { fields: [publishedAt], order: DESC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          publishedAt\r\n          mainImage {\r\n            asset {\r\n              _id\r\n            }\r\n            alt\r\n          }\r\n          title\r\n          _rawExcerpt\r\n          slug {\r\n            current\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst BlogPage = props => {\r\n  const { data, errors } = props\r\n\r\n  if (errors) {\r\n    return (\r\n      <Layout>\r\n        <GraphQLErrorList errors={errors} />\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  const postNodes = data && data.posts && mapEdgesToNodes(data.posts)\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title='Blog' />\r\n      <Container>\r\n        <h1 className={responsiveTitle1}>Blog</h1>\r\n        {postNodes && postNodes.length > 0 && <BlogPostPreviewGrid nodes={postNodes} />}\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPage\r\n","import { Link } from 'gatsby'\r\nimport React from 'react'\r\nimport { buildImageObj, cn, getBlogUrl } from '../lib/helpers'\r\nimport { imageUrlFor } from '../lib/image-url'\r\nimport BlockText from './block-text'\r\n\r\nimport styles from './blog-post-preview.module.css'\r\nimport { responsiveTitle3 } from './typography.module.css'\r\n\r\nfunction BlogPostPreview (props) {\r\n  return (\r\n    <Link className={styles.root} to={getBlogUrl(props.publishedAt, props.slug.current)}>\r\n      <div className={styles.leadMediaThumb}>\r\n        {props.mainImage && props.mainImage.asset && (\r\n          <img\r\n            src={imageUrlFor(buildImageObj(props.mainImage))\r\n              .width(600)\r\n              .height(Math.floor((9 / 16) * 600))\r\n              .url()}\r\n            alt={props.mainImage.alt}\r\n          />\r\n        )}\r\n      </div>\r\n      <h3 className={cn(responsiveTitle3, styles.title)}>{props.title}</h3>\r\n      {props._rawExcerpt && (\r\n        <div className={styles.excerpt}>\r\n          <BlockText blocks={props._rawExcerpt} />\r\n        </div>\r\n      )}\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default BlogPostPreview\r\n","import { Link } from 'gatsby'\r\nimport React from 'react'\r\nimport BlogPostPreview from './blog-post-preview'\r\n\r\nimport styles from './blog-post-preview-grid.module.css'\r\n\r\nfunction BlogPostPreviewGrid (props) {\r\n  return (\r\n    <div className={styles.root}>\r\n      {props.title && (\r\n        <h2 className={styles.headline}>\r\n          {props.browseMoreHref ? (\r\n            <Link to={props.browseMoreHref}>{props.title}</Link>\r\n          ) : (\r\n            props.title\r\n          )}\r\n        </h2>\r\n      )}\r\n      <ul className={styles.grid}>\r\n        {props.nodes &&\r\n          props.nodes.map(node => (\r\n            <li key={node.id}>\r\n              <BlogPostPreview {...node} />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      {props.browseMoreHref && (\r\n        <div className={styles.browseMoreNav}>\r\n          <Link to={props.browseMoreHref}>Browse more</Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nBlogPostPreviewGrid.defaultProps = {\r\n  title: '',\r\n  nodes: [],\r\n  browseMoreHref: ''\r\n}\r\n\r\nexport default BlogPostPreviewGrid\r\n"],"sourceRoot":""}